def count_words(input_string):
    # Split the string by spaces and count the resulting elements
    words = input_string.split(" ")
    # Filter out empty strings caused by multiple spaces
    words = [word for word in words if word]
    return len(words)

# Example usage
example_string = "1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202 1,0x810202"
word_count = count_words(example_string)
print("The number of words in the string is: ", word_count)
